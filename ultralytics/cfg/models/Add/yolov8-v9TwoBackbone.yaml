# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales:  # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# gelan backbone
backbone:
  [
   [-1, 1, Silence, []],

   # conv down
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2

   # conv down
   [-1, 1, Conv, [128, 3, 2]],  # 2-P2/4

   # elan-1 block
   [-1, 1, C2f, [256, True]],  # 3

   # avg-conv down
   [-1, 1, Conv, [256, 3, 2]],  # 4-P3/8

   # elan-2 block
   [-1, 1, C2f, [512, True]],  # 5

   # avg-conv down
   [-1, 1, Conv, [512, 3, 2]],  # 6-P4/16

   # elan-2 block
   [-1, 1, C2f, [1024, True]],  # 7

   # avg-conv down
   [-1, 1, Conv, [1024, 3, 2]],  # 8-P5/32

   # elan-2 block
   [-1, 1, C2f, [1024, True]],  # 9

   # routing
   [1, 1, CBLinear, [[64]]], # 10
   [3, 1, CBLinear, [[64, 128]]], # 11
   [5, 1, CBLinear, [[64, 128, 256]]], # 12
   [7, 1, CBLinear, [[64, 128, 256, 512]]], # 13
   [9, 1, CBLinear, [[64, 128, 256, 512, 1024]]], # 14

   # conv down fuse
   [0, 1, Conv, [64, 3, 2]],  # 15-P1/2
   [[10, 11, 12, 13, 14, -1], 1, CBFuse, [[0, 0, 0, 0, 0]]], # 16

   # conv down fuse
   [-1, 1, Conv, [128, 3, 2]],  # 17-P2/4
   [[11, 12, 13, 14, -1], 1, CBFuse, [[1, 1, 1, 1]]], # 18

   # elan-1 block
   [-1, 1, C2f, [256, True]],  # 19

   # avg-conv down fuse
   [-1, 1, Conv, [256, 3, 2]],  # 20-P3/8
   [[12, 13, 14, -1], 1, CBFuse, [[2, 2, 2]]], # 21

   # elan-2 block
   [-1, 1, C2f, [512, True]],  # 22

   # avg-conv down fuse
   [-1, 1, Conv, [512, 3, 2]],  # 23-P4/16
   [[13, 14, -1], 1, CBFuse, [[3, 3]]], # 24

   # elan-2 block
   [-1, 1, C2f, [1024, True]],  # 25

   # avg-conv down fuse
   [-1, 1, Conv, [1024, 3, 2]],  # 26-P5/32
   [[14, -1], 1, CBFuse, [[4]]], # 27

   # elan-2 block
   [-1, 1, C2f, [1024, True]],  # 28
  ]

# gelan head
head:
  [
   # elan-spp block
   [28, 1, SPPF, [1024, 5]],  # 29

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 25], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, C2f, [512]],  # 32

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 22], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, C2f, [256]],  # 35 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 32], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, C2f, [512]],  # 38 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 29], 1, Concat, [1]],  # cat head P5

   # elan-2 block
   [-1, 1, C2f, [1024]],  # 41 (P5/32-large)

   # detect
   [[35, 38, 41], 1, Detect, [nc]],  # Detect(P3, P4, P5)
  ]